@use "sass:math";

// Calculate the contrast ratio between two colors.
// @param $background
// @param $foreground
@function contrast-ratio($background, $foreground) {
    $luma1: luma($background);
    $luma2: luma($foreground);

    @return if($luma1 > $luma2, math.div($luma1 + .05, $luma2 + .05), math.div($luma2 + .05, $luma1 + .05));
}

// Fade a color to a specified opacity (0-1).
// @param $color
// @param $amount
@function fade($color, $amount) {
    @return fade-out(fade-in($color, 1), 1 - $amount);
}

// Calculate the relative luminance of a color.
// @param color
@function luma($color) {
    $rgb: (
        r: red($color),
        g: green($color),
        b: blue($color)
    );

    @each $name, $value in $rgb {
        $value: math.div($value, 255);
        $value: if($value < .03928, $value / 12.92, math.pow((math.div($value + .055, 1.055)), 2.5));
        $rgb: map-merge($rgb, ($name: $value));
    }

    @return (map-get($rgb, "r") * .2126) + (map-get($rgb, "g") * .7152) + (map-get($rgb, "b") * .0722);
}

// Choose the best text color for a background.
// @param $background
// @param $foreground1: #fff
// @param $foreground2: #fff
// @param $threshold: 4.5
@function text-color($background, $foreground1: #fff, $foreground2: #000, $threshold: 4.5) {
    @return if(contrast-ratio($background, $foreground1) > $threshold, $foreground1, $foreground2);
}
